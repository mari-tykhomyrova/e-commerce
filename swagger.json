{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "User with such email already exists"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "403": {
            "description": "If user doesn't have a password"
          },
          "404": {
            "description": "If email doesn't exist or password are not matched"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/activate": {
      "get": {
        "operationId": "AuthController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "After registration system sends email with activation link. Activating is required for account actions",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully activated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "User of token was not found"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/forget": {
      "get": {
        "operationId": "AuthController_passwordForgot",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Send email with mer password and activation link",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Send email with mer password and activation link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/reset": {
      "get": {
        "operationId": "AuthController_passwordReset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Updating password on visiting link activation",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users' password was successfully changed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "User of token was not found"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "example": "1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Return requested user",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return requested user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          },
          "404": {
            "description": "User was not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "take",
            "required": true,
            "in": "query",
            "example": "25",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": true,
            "in": "query",
            "example": "0",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Return all users according query",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return all users according query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users-shopping-preferences": {
      "post": {
        "operationId": "UsersShoppingPreferencesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Create users' shopping preferences",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users' shopping preferences was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          },
          "403": {
            "description": "Activate account firstly"
          }
        },
        "tags": [
          "users-shopping-preferences"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UsersShoppingPreferencesController_remove",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Remove users' shopping preferences",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users' shopping preferences was successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          },
          "403": {
            "description": "Activate account firstly"
          }
        },
        "tags": [
          "users-shopping-preferences"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "E-commerce site",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1981-11-12"
          },
          "full_name": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "date_of_birth",
          "full_name"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {}
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "date_of_birth": {
            "format": "date-time",
            "type": "string"
          },
          "isActivated": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "full_name",
          "date_of_birth",
          "isActivated"
        ]
      }
    }
  }
}
